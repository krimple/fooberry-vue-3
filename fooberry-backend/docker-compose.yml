version: "3.7"
services:
  lambda-exec-nodejs:
    image: "lambci/lambda:nodejs12.x"
    ports:
      - "9001:9001"
    volumes:
      - ./lambdas/functions:/var/task:ro,delegated
      - ./lambda-layers/nodejs:/opt/nodejs:ro,delegated
    command: "testing.s3demo"
    environment:
      - DOCKER_LAMBDA_STAY_OPEN=1
      - STEP_FNS_URI=https://step-commands-exec:8083
      - GRAPHQL_ENDPOINT=https://graphql-service:8083
      - STATEMACHINE_SERVICE_ENDPOINT=https://workflow-exec:8083
      - DYNAMO_DB_ENDPOINT=https://dynamodb:8000
      - MESSAGE="hi mommy"
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - S3_ENDPOINT_URL=http://fake-s3:4566
  # lambda-exec-python:
  #   image: "lambci/lambda:python3.8"
  #   ports:
  #     - "9001:9001"
  #   volumes:
  #     - ./lambdas/functions:/var/task:ro,delegated
  #   command: 'hello.handler'
  #   environment:
  #     - DOCKER_LAMBDA_STAY_OPEN=1
  #     - STEP_FNS_URI=https://step-commands-exec:8083
  #     - GRAPHQL_ENDPOINT=https://graphql-service:8083
  #     - STATEMACHINE_SERVICE_ENDPOINT=https://workflow-exec:8083
  #     - DYNAMO_DB_ENDPOINT=https://dynamodb:8000
  #     - MESSAGE="hi mommy"
  #     - AWS_ACCESS_KEY_ID=foo
  #     - AWS_SECRET_ACCESS_KEY=bar
  #     - S3_ENDPOINT_URL=http://fake-s3:4566

  workflow-exec:
    env_file: ~/.aws/.env
    # image: "amazon/aws-stepfunctions-local"
    build:
      dockerfile: state-machine/Dockerfile
      context: .
    entrypoint:
      - "/tmp/bin/entrypoint.sh"
    ports:
      - "8083:8083"
    volumes:
      - ./state-machine/bin:/tmp/bin:ro,delegated
      - ./state-machine/workflows:/tmp/workflows:ro,delegated
    environment:
      - LAMBDA_ENDPOINT=http://lambda-reverse-proxy:8080

  lambda-reverse-proxy:
    image: nginx:stable-alpine
    ports:
      - "8080:8080"
    volumes:
      - ./lambdas/proxy-server/default.conf:/etc/nginx/conf.d/default.conf

  graphql-service:
    env_file: ~/.aws/.env
    image: "lambci/lambda:nodejs12.x"
    ports:
      - "9002:9001"
    volumes:
      - ./sam-graphql/graphql-api:/var/task:ro,delegated
    command: "graphql.graphqlHandler"
    environment:
      - DOCKER_LAMBDA_STAY_OPEN=1

  dynamodb:
    build:
      dockerfile: dynamodb-local/Dockerfile
      context: .
    env_file: ~/.aws/.env
    ports:
      - "8000:8000"
    networks:
      - awsimulacrum

  fake-s3:
    image: localstack/localstack:latest
    ports:
      - "8085:8083"
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - "./.localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  awsimulacrum:
    name: awsimulacrum